{"version":3,"sources":["images/Pizzarela-Artesanal.png","components/header/Header.jsx","apis/client.js","apis/orders.js","app/store/paidOrdersSlice.js","apis/updateProcess.js","app/hooks/useDisplayOrders.jsx","components/orders/online&local/OnlineOrders.jsx","components/orders/Orders.jsx","App.jsx","app/store/rootStore.js","reportWebVitals.js","index.js"],"names":["Header","to","src","logo","alt","axios","create","baseURL","orders","a","API","get","respose","data","response","console","log","status","headers","request","message","config","fetchPaidOrders","createAsyncThunk","forEach","element","pizzas","sort","b","id","paidOrders","createSlice","name","initialState","value","error","reducers","extraReducers","pending","state","action","fulfilled","concat","payload","rejected","updateProcess","order","post","useDisplayOrders","renderTipo","renderIndividuales","renderPromociones","e","update","target","proceso","catch","err","alert","tipo","promociones","individuales","j","promo","i","length","grupo","push","className","style","fontWeight","map","color","pizza","medida","cantidad","element1","hora","transaccion_id","nombres","apellidos","type","defaultChecked","onChange","entrega","Fragment","telefono","distrito","urbanizacion","calle","numero","apartamento","bloque","detalles","OnlineOrders","useState","newPizza","setNewPizza","paidOrdersStatus","useSelector","paidOrdersValues","paidOrdersError","dispatch","useDispatch","setInterval","window","location","reload","useEffect","Orders","App","basename","path","component","configureStore","reducer","paidOrdersReducer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.260611d1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Pizzarela-Artesanal.398fbb34.png\";","import { Link } from 'react-router-dom';\r\n\r\nimport logo from '../../images/Pizzarela-Artesanal.png';\r\nimport './header.css';\r\n\r\nconst Header = () => {\r\n\r\n  return (\r\n    <header>\r\n      <div><Link to={`/`} ><img src={logo} alt=\"Pizzarela-Artesanal\" /></Link></div>\r\n    </header>\r\n    \r\n  );\r\n};\r\n\r\nexport default Header;","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n  baseURL: 'http://localhost:3005'\r\n});","import API from './client';\r\n\r\n// API interface for requesting all pizzas\r\nconst orders = async () => {\r\n  \r\n  try {\r\n\r\n    const respose = await API.get('orders');\r\n    return respose.data;\r\n\r\n  } catch (err) {\r\n\r\n    if (err.response) {\r\n      // The request was made and the server responded with a status code\r\n      // that falls out of the range of 2xx\r\n      console.log(err.response.data);\r\n      console.log(err.response.status);\r\n      console.log(err.response.headers);\r\n      throw err.response.data;\r\n    } else if (err.request) {\r\n      // The request was made but no response was received\r\n      // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n      // http.ClientRequest in node.js\r\n      console.log(err.request);\r\n      throw err.request;\r\n    } else {\r\n      // Something happened in setting up the request that triggered an Error\r\n      console.log('Error', err.message);\r\n    }\r\n    console.log(err.config);\r\n\r\n  }\r\n};\r\n\r\nexport default orders;","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\nimport orders from '../../apis/orders';\r\n\r\nconst initialState = {\r\n  value: [],\r\n  status: 'idle',\r\n  error: null,\r\n}\r\n\r\nexport const fetchPaidOrders = createAsyncThunk('paidOrders/fetchPaidOrders', async () => {\r\n  const response = await orders();\r\n  console.log('Not sorted: ', response)\r\n  // You are making pizzas[Array].id order by ascendant in order to dislay promos in groups of three\r\n  if (response[0] !== \"No hay Ã³rdenes nuevas.\") response.forEach(element => element.pizzas.sort((a, b) => a.id - b.id));\r\n  // console.log('Sorted: ', response)\r\n  return response;\r\n});\r\n\r\nconst paidOrders = createSlice({\r\n  name: 'paidOrders',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: {\r\n    [fetchPaidOrders.pending]: (state, action) => {\r\n      state.status = 'loading';\r\n    },\r\n    [fetchPaidOrders.fulfilled]: (state, action) => {\r\n      state.status = 'succeeded';\r\n      state.value = state.value.concat(action.payload);\r\n    },\r\n    [fetchPaidOrders.rejected]: (state, action) => {\r\n      state.status = 'failed';\r\n      state.error = action.error.message;\r\n    },\r\n  }\r\n});\r\n\r\nexport default paidOrders.reducer;","import API from './client';\r\n\r\n// API interface for requesting all pizzas\r\nconst updateProcess = async (order) => {\r\n  \r\n  try {\r\n\r\n    const respose = await API.post('orders/process', order);\r\n    // You are doing nothing with response.data\r\n    return respose.data;\r\n\r\n  } catch (err) {\r\n\r\n    if (err.response) {\r\n      // The request was made and the server responded with a status code\r\n      // that falls out of the range of 2xx\r\n      // console.log(err.response.data.message);\r\n      // console.log(err.response.status);\r\n      // console.log(err.response.headers);\r\n      throw err.response.data.message;\r\n    } else if (err.request) {\r\n      // The request was made but no response was received\r\n      // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n      // http.ClientRequest in node.js\r\n      // console.log(err.request);\r\n      throw err.request;\r\n    } else {\r\n      // Something happened in setting up the request that triggered an Error\r\n      // console.log('Error', err.message);\r\n    }\r\n    // console.log(err.config);\r\n\r\n  }\r\n};\r\n\r\nexport default updateProcess;","import React from 'react'\r\nimport updateProcess from '../../apis/updateProcess'\r\n\r\nfunction useDisplayOrders({ e }) {\r\n\r\n  const update = ({ target }) => {\r\n    updateProcess({id: e.id, proceso: target.value}).catch(err => alert(`${err} Proceso no actualizado. Orden ${e.id}`));\r\n  }\r\n\r\n  // For rendering\r\n  let renderTipo;\r\n  let renderIndividuales = [];\r\n  let renderPromociones = [];\r\n\r\n  if (e.tipo === 'A') {\r\n    renderTipo = 'Individual y PromociÃ³n'\r\n  } else if (e.tipo === 'P') {\r\n    renderTipo = 'PromociÃ³n'\r\n  } else if (e.tipo === 'I') {\r\n    renderTipo = 'Individual'\r\n  }\r\n\r\n  // Orders of promos and individuals\r\n  let promociones = [];\r\n  let individuales = [];\r\n\r\n  // Group by 3 (+1) or 2 (+1) elements in arr, because of promos\r\n  let j = 1;\r\n  let promo = [];\r\n  for (let i = 0; i < e.pizzas.length; i++) {\r\n    if (e.pizzas[i].grupo === 'Pack Familiar 1' || e.pizzas[i].grupo === 'Pack Familiar 2' || \r\n    e.pizzas[i].grupo === 'Promo para Compartir' || e.pizzas[i].grupo === 'Promo Entre Patas') {\r\n      if (j <= 4) {\r\n        promo.push(e.pizzas[i])\r\n        j++;\r\n      } \r\n      if (j === 4) {\r\n        promociones.push(promo);\r\n        promo = []\r\n        j = 1;\r\n      }\r\n    } else if (e.pizzas[i].grupo === 'DÃºos Grandes') {\r\n      if (j <= 3) {\r\n        promo.push(e.pizzas[i])\r\n        j++;\r\n      } \r\n      if (j === 3) {\r\n        promociones.push(promo);\r\n        promo = []\r\n        j = 1;\r\n      }\r\n    } else {\r\n      individuales.push(e.pizzas[i])\r\n    }\r\n  }\r\n\r\n  renderIndividuales = (individuales.length > 0) && (\r\n    <section className='pizzasIndividuales'>\r\n      <section><span style={{fontWeight: 700}}>Pizzas Individuales:</span></section>\r\n      {\r\n        individuales.map(element => {\r\n          return (\r\n            <section className='pizzasInfoIndividuales' key={`${element.id}`} >\r\n              <span style={{fontWeight: 700, color: '#DB9423'}}>Nombre: </span>{element.pizza} {element.medida}&nbsp;\r\n              <span style={{fontWeight: 700, color: '#DB9423'}}>Cantidad: </span>{element.cantidad}\r\n            </section>\r\n          )\r\n        })\r\n      }\r\n    </section>\r\n  );\r\n  renderPromociones = (promociones.length > 0) && (\r\n    <section className='pizzasPromociones'>\r\n      <section><span style={{fontWeight: 700}}>Pizzas Promociones:</span></section>\r\n      {\r\n        promociones.map(element => {\r\n          return (\r\n            <section className='pizzasPromocionesDetails' key={`${element[0].id}-${element[1].id}`}>\r\n              <section className='promoName' style={{fontWeight: 600, color: '#db5d23'}}>{element[0].grupo}:</section>\r\n              {element.map(element1 => {\r\n                return (\r\n                  <section className='pizzasInfoPromociones' key={`${element1.id}`} >\r\n                    <span style={{fontWeight: 700, color: '#DB9423'}}>Nombre: </span>{element1.pizza} {element1.medida}&nbsp;\r\n                    <span style={{fontWeight: 700, color: '#DB9423'}}>Cantidad: </span>{element1.cantidad}\r\n                  </section>\r\n                )\r\n              })}\r\n            </section>\r\n          )\r\n        })\r\n      }\r\n    </section>\r\n  );\r\n  \r\n  return (\r\n    <section className='details' >\r\n      <section className='InfoProcess'>\r\n        <section className='info'>\r\n          <section><span style={{fontWeight: 700}}>Id de orden:</span> <span style={{fontWeight: 700, color: '#db5d23'}}>{e.id}</span></section>\r\n          <section><span style={{fontWeight: 700}}>Hora: </span>{e.hora}</section>\r\n          <section><span style={{fontWeight: 700}}>Id de transacciÃ³n: </span>{e.transaccion_id}</section>\r\n          <section><span style={{fontWeight: 700}}>Tipo: </span>{renderTipo}</section>\r\n          <section><span style={{fontWeight: 700}}>Cliente: </span>{e.nombres} {e.apellidos}</section>\r\n        </section>\r\n        <section className='process'>\r\n          <section><span style={{fontWeight: 700}}>Proceso:</span></section>\r\n          <input type=\"radio\" name={`${e.id}`} value=\"En espera\" defaultChecked={e.proceso === 'En espera'} onChange={update}/> 1.- En espera <br />\r\n          <input type=\"radio\" name={`${e.id}`} value=\"Preparando\" defaultChecked={e.proceso === 'Preparando'} onChange={update}/> 2.- Preparando\r\n          <br />\r\n          <input type=\"radio\" name={`${e.id}`} value=\"Listo\" defaultChecked={e.proceso === 'Listo'} onChange={update}/> 3.- Listo<br />\r\n          <input type=\"radio\" name={`${e.id}`} value=\"Entregado\" defaultChecked={e.proceso === 'Entregado'} onChange={update}/> 4.- Entregado<br />\r\n        </section>\r\n      </section>\r\n      {\r\n        e.entrega === 'local' ?\r\n        <section><span style={{fontWeight: 700}}>Entrega: </span>Local</section>\r\n        :\r\n        (\r\n          <React.Fragment>\r\n            <section ><span style={{fontWeight: 700}}>TelÃ©fono: </span>{e.telefono}</section>\r\n            <section><span style={{fontWeight: 700}}>Entrega: </span>{`${e.distrito}, ${e.urbanizacion}, ${e.calle} ${e.numero}, apartamento ${e.apartamento}, bloque ${e.bloque}.`}</section>\r\n            <section ><span style={{fontWeight: 700}}>Detalles: </span>{e.detalles}</section>\r\n          </React.Fragment>\r\n        )\r\n      }\r\n      {renderIndividuales}\r\n      {renderPromociones}\r\n    </section>  \r\n  )\r\n}\r\n\r\nexport default useDisplayOrders\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport { fetchPaidOrders } from '../../../app/store/paidOrdersSlice'\r\nimport UseDisplayOrders from '../../../app/hooks/useDisplayOrders'\r\n\r\nimport './onlineOrders.css'\r\n\r\nfunction OnlineOrders() {\r\n  \r\n  const [newPizza, setNewPizza] = useState([]);\r\n  const paidOrdersStatus = useSelector(state => state.paidOrders.status);\r\n  const paidOrdersValues = useSelector(state => state.paidOrders.value);\r\n  const paidOrdersError = useSelector(state => state.paidOrders.error);\r\n  \r\n  const dispatch = useDispatch();\r\n\r\n  setInterval(() => {\r\n    window.location.reload()\r\n    // location.reload();\r\n  }, 60000); \r\n\r\n  useEffect(() => {\r\n    if (paidOrdersStatus === 'idle') {\r\n      dispatch(fetchPaidOrders());\r\n    }\r\n  }, [dispatch, paidOrdersStatus]);\r\n\r\n  useEffect(() => {\r\n    if (paidOrdersStatus === 'succeeded') {\r\n      setNewPizza(paidOrdersValues)\r\n    }\r\n  }, [paidOrdersStatus, paidOrdersValues])\r\n\r\n  let orders;\r\n  if ( paidOrdersStatus === 'loading') {\r\n    orders = <h2>Cargando Ãrdenes...</h2>\r\n  } else if ( paidOrdersStatus === 'succeeded') {\r\n    orders = (\r\n      <React.Fragment>\r\n        {/* <h1>Ãrdenes Online</h1> */}\r\n        {\r\n          newPizza.map((e, i) => {\r\n              if (e === 'No hay Ã³rdenes nuevas.') {\r\n                return <h2 key={i}>{e}</h2>\r\n              } else {\r\n                return <UseDisplayOrders e={e} key={`${e.id}`} />\r\n              }\r\n          })\r\n        }\r\n      </React.Fragment>\r\n    );\r\n  } else if ( paidOrdersStatus === 'failed') {\r\n    orders = <section>{paidOrdersError}</section>\r\n  }\r\n\r\n  return (\r\n    <section className='onlineOrders'>\r\n      {orders}\r\n    </section>\r\n  );\r\n\r\n}\r\n\r\nexport default OnlineOrders","import React from 'react'\r\n\r\nimport OnlineOrders from './online&local/OnlineOrders'\r\n// import LocalOrders from './online&local/LocalOrders'\r\n\r\nimport './orders.css';\r\n\r\nfunction Orders() {\r\n  return (\r\n    <section className='orders'>\r\n      <section className='online'>\r\n        <OnlineOrders />\r\n      </section>\r\n      {/* <section className='local'>\r\n        <LocalOrders />\r\n      </section> */}\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Orders\r\n","import { \n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\n\nimport Header from './components/header/Header';\nimport Orders from './components/orders/Orders'\n\nfunction App() {\n\n  return (\n    <Router basename={'/vistaCajero'}>\n      <Header />\n      <div className=\"App\">\n        <Switch>\n          <Route path={`/`} component={Orders} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","import { configureStore } from '@reduxjs/toolkit'\r\nimport paidOrdersReducer from './paidOrdersSlice'\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    paidOrders: paidOrdersReducer,\r\n  }\r\n});","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\n\nimport App from './App';\nimport store from './app/store/rootStore';\n\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}